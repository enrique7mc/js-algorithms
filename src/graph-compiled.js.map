{"version":3,"sources":["graph.js"],"names":[],"mappings":"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","file":"graph-compiled.js","sourcesContent":["function Vertex(name) {\n    this.name = name;\n}\n\nVertex.prototype.toString = function () {\n  return `${this.name} `;\n};\n\nfunction Graph(vertexList) {\n    this.vertexList = vertexList;\n    this.edges = 0;\n    this.adj = [];\n    for(let i = 0; i < vertexList.length; i++) {\n        this.adj[i] = [];\n    }\n\n    this.marked = new Array(vertexList.length).fill(false);\n}\n\nGraph.prototype.addEdge = function (v, w) {\n    this.adj[v].push(w);\n    this.adj[w].push(v);\n    this.edges++;\n};\n\nGraph.prototype.showGraph = function () {\n    for(let i = 0; i < this.vertexList.length; i++) {\n        let row = `${this.vertexList[i]} -> `;\n        for(const v of this.adj[i]) {\n            let vertex = this.vertexList[v];\n            row += `${vertex.name} `;\n        }\n        console.log(row);\n    }\n};\n\n/*Graph.prototype.dfs = function (v) {\n    if(!this.adj[v]) return;\n    this.marked[v] = true;\n    console.log(`Visited: ${this.vertexList[v]}`);\n    for(const w of this.adj[v]) {\n        if(!this.marked[w]) {\n            this.dfs(w);\n        }\n    }\n};*/\n\nGraph.prototype.dfs = function (v) {\n    if(!this.adj[v]) return;\n    this.marked.fill(false);\n    const stack = [v];\n    this.marked[v] = true;\n    while(stack.length) {\n        let vertex = stack.pop();\n        console.log(`Visited: ${this.vertexList[vertex]}`);\n        this.marked[vertex] = true;\n        for(const w of this.adj[vertex]) {\n            if(!this.marked[w]) {\n                this.marked[w] = true;\n                stack.push(w);\n            }\n        }\n    }\n};\n\nGraph.prototype.bfs = function (v) {\n    if(!this.adj[v]) return;\n    this.marked.fill(false);\n    const queue = [v];\n    this.marked[v] = true;\n    while(queue.length) {\n        let vertex = queue.shift();\n        console.log(`Visited: ${this.vertexList[vertex]}`);\n        this.marked[vertex] = true;\n        for(const w of this.adj[vertex]) {\n            if(!this.marked[w]) {\n                this.marked[w] = true;\n                queue.push(w);\n            }\n        }\n    }\n};\n\nlet vertexList = 'A B C D E F G H'.split(' ').map(name => new Vertex(name));\nconst graph = new Graph(vertexList);\n// console.log(vertexList);\nfunction addEdges() {\n    graph.addEdge(0, 1);\n    graph.addEdge(0, 2);\n    graph.addEdge(0, 3);\n\n    graph.addEdge(1, 4);\n    graph.addEdge(1, 5);\n\n    graph.addEdge(2, 6);\n    \n    graph.addEdge(7, 3);\n    graph.addEdge(7, 4);\n    graph.addEdge(7, 5);\n    graph.addEdge(7, 6);\n\n}\naddEdges();\n// graph.showGraph();\ngraph.bfs(0);"]}