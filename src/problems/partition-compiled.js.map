{"version":3,"sources":["partition.js"],"names":[],"mappings":"AAAA;;;AAEA,SAAS,IAAT,CAAc,IAAd,EAAoB;AAChB,SAAK,IAAL,GAAY,IAAZ;AACH;;AAED,SAAS,SAAT,CAAmB,IAAnB,EAAwB;AACpB,QAAI,MAAM,EAAV;AACA,WAAM,IAAN,EAAY;AACR,eAAQ,IAAE,KAAK,IAAK,IAApB;AACA,eAAO,KAAK,IAAZ;AACH;;AAED,YAAQ,GAAR,CAAa,IAAE,GAAI,WAAnB;AACH;;AAED,SAAS,SAAT,CAAmB,IAAnB,EAAyB,CAAzB,EAA4B;AACxB,QAAI,OAAO,IAAI,IAAJ,EAAX;AACA,UAAM,QAAQ,IAAd;AACA,QAAI,UAAU,IAAI,IAAJ,EAAd;AACA,UAAM,QAAQ,OAAd;;AAEA,QAAI,UAAU,IAAd;AACA,WAAM,OAAN,EAAe;AACX,YAAI,OAAO,QAAQ,IAAnB;AACA,YAAG,QAAQ,IAAR,GAAe,CAAlB,EAAqB;AACjB,oBAAQ,IAAR,GAAe,OAAf;AACA,sBAAU,QAAQ,IAAlB;AACA,oBAAQ,IAAR,GAAe,IAAf;AACH,SAJD,MAIO;AACH,iBAAK,IAAL,GAAY,OAAZ;AACA,mBAAO,KAAK,IAAZ;AACA,iBAAK,IAAL,GAAY,IAAZ;AACH;AACD,kBAAU,IAAV;AACH;;AAED,SAAK,IAAL,GAAY,MAAM,IAAlB;AACA,WAAO,MAAM,IAAb;AACH;;AAED,MAAM,KAAK,IAAI,IAAJ,CAAS,CAAT,CAAX;AACA,MAAM,KAAK,IAAI,IAAJ,CAAS,CAAT,CAAX;AACA,MAAM,KAAK,IAAI,IAAJ,CAAS,CAAT,CAAX;AACA,MAAM,KAAK,IAAI,IAAJ,CAAS,EAAT,CAAX;AACA,MAAM,KAAK,IAAI,IAAJ,CAAS,CAAT,CAAX;AACA,MAAM,KAAK,IAAI,IAAJ,CAAS,CAAT,CAAX;;AAEA,GAAG,IAAH,GAAU,EAAV;AACA,GAAG,IAAH,GAAU,EAAV;AACA,GAAG,IAAH,GAAU,EAAV;AACA,GAAG,IAAH,GAAU,EAAV;AACA,GAAG,IAAH,GAAU,EAAV;;AAEA,UAAU,EAAV;AACA,MAAM,OAAO,UAAU,EAAV,EAAc,CAAd,CAAb;AACA,UAAU,IAAV","file":"partition-compiled.js","sourcesContent":["'use strict';\n/* Write code to partition a linked list around a value x */\nfunction Node(data) {\n    this.data = data;\n}\n\nfunction printList(head){\n    let str = '';\n    while(head) {\n        str += `${head.data} `;\n        head = head.next;\n    }\n\n    console.log(`${str} -> null`);\n}\n\nfunction partition(head, x) {\n    let less = new Node();\n    const list1 = less;\n    let greater = new Node();\n    const list2 = greater;\n\n    let current = head;\n    while(current) {\n        let next = current.next;\n        if(current.data > x) {\n            greater.next = current;\n            greater = greater.next;\n            greater.next = null;\n        } else {\n            less.next = current;\n            less = less.next;\n            less.next = null;\n        }\n        current = next;\n    }\n\n    less.next = list2.next;\n    return list1.next;\n}\n\nconst n1 = new Node(4);\nconst n2 = new Node(1);\nconst n3 = new Node(8);\nconst n4 = new Node(10);\nconst n5 = new Node(2);\nconst n6 = new Node(3);\n\nn1.next = n2;\nn2.next = n3;\nn3.next = n4;\nn4.next = n5;\nn5.next = n6;\n\nprintList(n1);\nconst head = partition(n1, 3);\nprintList(head);\n\n"]}