{"version":3,"sources":["sum-root-to-leafs.js"],"names":[],"mappings":";;;;AAIA,SAAS,IAAT,CAAc,IAAd,EAAoB,IAApB,EAA0B,KAA1B,EAAiC;AAC7B,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACH;;AAED,SAAS,MAAT,CAAiB,IAAjB,EAAuB;AACnB,WAAO,KAAK,IAAL,IAAa,IAAb,IAAqB,KAAK,KAAL,IAAc,IAA1C;AACH;;AAED,SAAS,cAAT,CAAwB,IAAxB,EAA8B;AAC1B,QAAG,CAAC,IAAJ,EAAU,OAAO,CAAP;;AAEV,SAAK,IAAL,GAAY,EAAZ;AACA,QAAI,SAAS,CAAb;AACA,UAAM,QAAQ,CAAC,IAAD,CAAd;AACA,WAAM,MAAM,MAAZ,EAAoB;AAChB,YAAI,UAAU,MAAM,KAAN,EAAd;AACA,YAAI,OAAO,OAAP,CAAJ,EAAqB;AACjB,sBAAU,YAAY,OAAZ,CAAV;AACA;AACH;;AAED,YAAG,QAAQ,IAAX,EAAiB;AACb,gBAAI,OAAO,QAAQ,IAAnB;AACA,iBAAK,IAAL,GAAY,CAAC,GAAG,QAAQ,IAAZ,EAAkB,QAAQ,IAA1B,CAAZ;AACA,kBAAM,IAAN,CAAW,IAAX;AACH;;AAED,YAAG,QAAQ,KAAX,EAAkB;AACd,gBAAI,QAAQ,QAAQ,KAApB;AACA,kBAAM,IAAN,GAAa,CAAC,GAAG,QAAQ,IAAZ,EAAkB,QAAQ,IAA1B,CAAb;AACA,kBAAM,IAAN,CAAW,KAAX;AACH;;AAED,gBAAQ,IAAR,GAAe,IAAf;AACH;;AAED,WAAO,MAAP;AACH;;AAED,SAAS,WAAT,CAAqB,IAArB,EAA2B;AACvB,UAAM,OAAO,KAAK,IAAlB;AACA,SAAK,IAAL,CAAU,KAAK,IAAf;AACA,QAAI,SAAS,CAAb;AACA,QAAI,QAAQ,CAAZ;AACA,SAAI,IAAI,IAAI,KAAK,MAAL,GAAa,CAAzB,EAA4B,KAAK,CAAjC,EAAoC,GAApC,EAAyC;AACrC,kBAAU,KAAK,CAAL,IAAU,KAApB;AACA,iBAAS,EAAT;AACH;;AAED,WAAO,MAAP;AACH;;AAED,IAAI,KAAK,IAAI,IAAJ,CAAS,CAAT,CAAT;AACA,IAAI,KAAK,IAAI,IAAJ,CAAS,CAAT,CAAT;AACA,IAAI,KAAK,IAAI,IAAJ,CAAS,CAAT,CAAT;;AAEA,IAAI,KAAK,IAAI,IAAJ,CAAS,CAAT,EAAY,EAAZ,EAAgB,EAAhB,CAAT;AACA,IAAI,KAAK,IAAI,IAAJ,CAAS,CAAT,EAAY,EAAZ,CAAT;AACA,IAAI,KAAK,IAAI,IAAJ,CAAS,CAAT,EAAY,EAAZ,EAAgB,EAAhB,CAAT;;AAEA,MAAM,SAAS,eAAe,EAAf,CAAf;AACA,QAAQ,GAAR,CAAY,MAAZ","file":"sum-root-to-leafs-compiled.js","sourcesContent":["/**\n * Created by enrique.munguia on 10/18/16.\n */\n\nfunction Node(data, left, right) {\n    this.data = data;\n    this.left = left;\n    this.right = right;\n}\n\nfunction isLeaf (node) {\n    return node.left == null && node.right == null;\n}\n\nfunction sumRootToLeafs(node) {\n    if(!node) return 0;\n\n    node.list = [];\n    let result = 0;\n    const queue = [node];\n    while(queue.length) {\n        let current = queue.shift();\n        if (isLeaf(current)) {\n            result += updateTotal(current);\n            continue;\n        }\n\n        if(current.left) {\n            let left = current.left;\n            left.list = [...current.list, current.data];\n            queue.push(left);\n        }\n\n        if(current.right) {\n            let right = current.right;\n            right.list = [...current.list, current.data];\n            queue.push(right);\n        }\n\n        current.list = null;\n    }\n\n    return result;\n}\n\nfunction updateTotal(node) {\n    const list = node.list;\n    list.push(node.data);\n    let result = 0;\n    let order = 1;\n    for(let i = list.length -1; i >= 0; i--) {\n        result += list[i] * order;\n        order *= 10;\n    }\n\n    return result;\n}\n\nlet n4 = new Node(4);\nlet n5 = new Node(2);\nlet n6 = new Node(5);\n\nlet n3 = new Node(3, n5, n6);\nlet n2 = new Node(2, n4);\nlet n1 = new Node(1, n2, n3);\n\nconst result = sumRootToLeafs(n1);\nconsole.log(result);"]}