{"version":3,"sources":["binary-search.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,SAAS,YAAT,CAAsB,GAAtB,EAA2B,OAA3B,EAAoC,MAAM,CAA1C,EAA6C,MAAM,IAAI,MAAvD,EAA+D;AAC3D,QAAG,CAAC,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB,MAAM,IAAI,KAAJ,CAAU,cAAV,CAAN;AACxB,QAAG,MAAM,GAAT,EAAe,OAAO,CAAC,CAAR;;AAEf,UAAM,cAAc,MAAM,CAAC,MAAM,GAAP,IAAc,CAAxC;AACA,UAAM,gBAAgB,IAAI,WAAJ,CAAtB;AACA,QAAG,kBAAkB,OAArB,EAA8B,OAAO,WAAP;AAC9B,QAAG,UAAU,aAAb,EAA4B;AACxB,eAAO,aAAa,GAAb,EAAkB,OAAlB,EAA2B,cAAc,CAAzC,EAA4C,GAA5C,CAAP;AACH,KAFD,MAEO;AACH,eAAO,aAAa,GAAb,EAAkB,OAAlB,EAA2B,GAA3B,EAAgC,cAAc,CAA9C,CAAP;AACH;AACJ;;AAED,MAAM,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX,EAAe,EAAf,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,EAAmD,GAAnD,CAAZ;AACA,QAAQ,GAAR,CAAY,aAAa,GAAb,EAAkB,GAAlB,CAAZ","file":"binary-search-compiled.js","sourcesContent":["/**\n * Created by enrique.munguia on 10/11/16.\n */\n\n/*\n    Binary Search\n\n    - Get the middle element in the array\n    - If it's the element we are looking for, return int\n    - Else check if  middle > element, recursively call with the right half\n    - If middle < element, recursively call with the left half\n    - If the array has zero elements return null\n\n    Complexity\n    Space: O(n) callstack\n    Time: O(log(n))\n */\n\nfunction binarySearch(arr, element, min = 0, max = arr.length) {\n    if(!Array.isArray(arr)) throw new Error('Not an array');\n    if(min > max)  return -1;\n\n    const middleIndex = min + (max - min) / 2;\n    const middleElement = arr[middleIndex];\n    if(middleElement === element) return middleIndex;\n    if(element > middleElement) {\n        return binarySearch(arr, element, middleIndex + 1, max);\n    } else {\n        return binarySearch(arr, element, min, middleIndex - 1);\n    }\n}\n\nconst arr = [4, 5, 11, 12, 20, 34, 38, 40, 48, 59, 68, 69, 80, 100];\nconsole.log(binarySearch(arr, 100));"]}