{"version":3,"sources":["merge-sort.js"],"names":[],"mappings":";;;AAGA,MAAM,EAAE,WAAF,KAAkB,QAAQ,SAAR,CAAxB;;;;;;;;;;AAUA,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACpB,QAAI,SAAS,IAAI,MAAjB;AACA,QAAI,WAAW,CAAf,EAAkB;;AAElB,QAAI,MAAM,SAAS,CAAnB;AACA,QAAI,OAAO,IAAI,KAAJ,CAAU,CAAV,EAAa,GAAb,CAAX;AACA,QAAI,QAAQ,IAAI,KAAJ,CAAU,GAAV,EAAe,MAAf,CAAZ;;AAEA,cAAU,IAAV;AACA,cAAU,KAAV;AACA,UAAM,GAAN,EAAW,IAAX,EAAiB,KAAjB;AACH;;AAED,SAAS,KAAT,CAAe,MAAf,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC;AAChC,QAAI,IAAI,CAAR;AAAA,QAAW,IAAI,CAAf;AAAA,QAAkB,IAAI,CAAtB;;AAEA,WAAM,IAAI,KAAK,MAAT,IAAmB,IAAI,MAAM,MAAnC,EAA2C;AACvC,YAAI,KAAK,CAAL,IAAU,MAAM,CAAN,CAAd,EAAwB;AACpB,mBAAO,GAAP,IAAc,KAAK,GAAL,CAAd;AACH,SAFD,MAEO;AACH,mBAAO,GAAP,IAAc,MAAM,GAAN,CAAd;AACH;AACJ;;AAED,WAAO,IAAI,KAAK,MAAhB,EAAwB;AACpB,eAAO,GAAP,IAAc,KAAK,GAAL,CAAd;AACH;;AAED,WAAO,IAAI,MAAM,MAAjB,EAAyB;AACrB,eAAO,GAAP,IAAc,MAAM,GAAN,CAAd;AACH;AACJ;;AAED,QAAQ,GAAR,CAAY,WAAZ;AACA,UAAU,WAAV;AACA,QAAQ,GAAR,CAAY,WAAZ","file":"merge-sort-compiled.js","sourcesContent":["/**\n * Created by enrique.munguia on 10/14/16.\n */\nconst { sampleArray } = require('./utils');\n/*\n     Merge Sort\n\n     Complexity:\n     Time: O(n log(n))\n     Space: O(n)\n     Stable\n*/\n\nfunction mergeSort(arr) {\n    let length = arr.length;\n    if (length === 1) return;\n    \n    let mid = length / 2;\n    let left = arr.slice(0, mid);\n    let right = arr.slice(mid, length);\n\n    mergeSort(left);\n    mergeSort(right);\n    merge(arr, left, right);\n}\n\nfunction merge(target, left, right) {\n    let i = 0, j = 0, k = 0;\n\n    while(i < left.length && j < right.length) {\n        if (left[i] < right[j]) {\n            target[k++] = left[i++];\n        } else {\n            target[k++] = right[j++];\n        }\n    }\n\n    while (i < left.length) {\n        target[k++] = left[i++];\n    }\n\n    while (j < right.length) {\n        target[k++] = right[j++];\n    }\n}\n\nconsole.log(sampleArray);\nmergeSort(sampleArray);\nconsole.log(sampleArray);\n\n"]}