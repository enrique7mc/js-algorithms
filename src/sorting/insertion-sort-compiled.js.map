{"version":3,"sources":["insertion-sort.js"],"names":[],"mappings":";;;;AAIA,MAAM,EAAE,WAAF,EAAe,IAAf,KAAwB,QAAQ,SAAR,CAA9B;;;;;;;;;;;AAWA,SAAS,aAAT,CAAuB,GAAvB,EAA4B;AACxB,QAAI,sBAAsB,CAA1B;AACA,SAAI,IAAI,IAAI,CAAZ,EAAe,IAAI,IAAI,MAAvB,EAA+B,GAA/B,EAAoC;AAChC,cAAM,UAAU,IAAI,CAAJ,CAAhB;AACA,YAAI,eAAe,CAAnB;AACA,YAAI,YAAY,mBAAhB;AACA,eAAM,UAAU,IAAI,SAAJ,CAAV,IAA4B,aAAa,CAA/C,EAAkD;AAC9C,iBAAK,GAAL,EAAU,cAAV,EAA0B,WAA1B;AACH;AACD;AACH;AACJ;;AAED,QAAQ,GAAR,CAAY,WAAZ;AACA,cAAc,WAAd;AACA,QAAQ,GAAR,CAAY,WAAZ","file":"insertion-sort-compiled.js","sourcesContent":["/**\n * Created by enrique.munguia on 10/13/16.\n */\n\nconst { sampleArray, swap } = require('./utils');\n\n/*\n    Insertion Sort\n\n    Complexity:\n    Time: O(n^2)\n    Space: O(1)\n    Stable\n    Adaptive\n */\nfunction insertionSort(arr) {\n    let sortedListLastIndex = 0;\n    for(let i = 1; i < arr.length; i++) {\n        const current = arr[i];\n        let currentIndex = i;\n        let swapIndex = sortedListLastIndex;\n        while(current < arr[swapIndex] && swapIndex >= 0) {\n            swap(arr, currentIndex--, swapIndex--);\n        }\n        sortedListLastIndex++;\n    }\n}\n\nconsole.log(sampleArray);\ninsertionSort(sampleArray);\nconsole.log(sampleArray);"]}