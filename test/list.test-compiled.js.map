{"version":3,"sources":["list.test.js"],"names":[],"mappings":"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","file":"list.test-compiled.js","sourcesContent":["'use strict';\nvar expect = require('expect');\nvar List = require('../src/list');\n\ndescribe('List', function () {\n    describe('List object', function () {\n        it('should return a List object', function () {\n            expect(new List).toBeA(List)\n        });\n    });\n\n    describe('List length', function () {\n        it('should return an empty List', function () {\n            let list = new List();\n            expect(list.listSize).toBe(0);\n        });\n    });\n\n    describe('List position', function () {\n        it('should return the first position', function () {\n            let list = new List();\n            expect(list.position).toBe(0);\n        });\n    });\n\n    describe('clear(e)', function () {\n        it('should clear the list', function () {\n            let list = new List();\n            list.append(1);\n            list.append(2);\n            expect(list.listSize).toBe(2);\n            list.clear();\n            expect(list.listSize).toBe(0);\n            expect(list.position).toBe(0);\n        });\n    });\n\n    describe('toString()', function () {\n        it('should return the list as string', function () {\n            let list = new List();\n            expect(list.toString()).toBe('[]');\n            list.append(1);\n            list.append(2);\n            list.append(3);\n            expect(list.toString()).toBe('[1, 2, 3]');\n        });\n    });\n\n    describe('append(e)', function () {\n        it('should append an element at next position', function () {\n            let list = new List();\n            list.append(1);\n            list.append(2);\n            expect(list.listSize).toBe(2);\n        });\n    });\n\n    describe('getElement()', function () {\n        it('should getElement at current position', function () {\n            let list = new List();\n            expect(list.getElement()).toBe(undefined);\n            list.append(1);\n            list.append(2);\n            expect(list.getElement()).toBe(1);\n        });\n    });\n\n    describe('find(element)', function () {\n        it('should find element position', function () {\n            let list = new List();\n            list.append(1);\n            list.append(2);\n            list.append(3);\n            expect(list.find(3)).toBe(2);\n            expect(list.find(2)).toBe(1);\n        });\n    });\n\n    describe('insert(element, after)', function () {\n        it('should find element position', function () {\n            let list = new List();\n            list.append(1);\n            list.append(2);\n            list.append(3);\n            var result = list.insert(5, 2);\n            expect(result).toBe(true);\n            expect(list.listSize).toBe(4);\n            expect(list.toString()).toBe('[1, 2, 5, 3]');\n        });\n    });\n});"]}